<?php
/*
	Works in the background: yes
	Pro version scans the entire website: yes
	Sends email reminders: yes
	Finds place holder text: yes
	Custom Dictionary for unusual words: yes
	Scans Password Protected membership Sites: yes
	Unlimited scans on my website: Yes


	Scans Categories: Yes WP Spell Check Pro
	Scans SEO Titles: Yes WP Spell Check Pro
	Scans SEO Descriptions: Yes WP Spell Check Pro
	Scans WordPress Menus: Yes WP Spell Check Pro
	Scans Page Titles: Yes WP Spell Check Pro
	Scans Post Titles: Yes WP Spell Check Pro
	Scans Page slugs: Yes WP Spell Check Pro
	Scans Post Slugs: Yes WP Spell Check Pro
	Scans Post categories: Yes WP Spell Check Pro

	Privacy URI: https://www.wpspellcheck.com/privacy-policy/
	Pro Add-on / Home Page: https://www.wpspellcheck.com/
	Pro Add-on / Prices: https://www.wpspellcheck.com/purchase-options/
*/
	/* WP Spell Check classes */
		
	/* Main WP Spell Check Functions */
	
	
	function check_word($word, $dict_list) {
		ini_set('memory_limit','256M'); //Sets the PHP memory limit
		if (strlen($word) <= 2) { return true; }
		if (preg_replace('/[^A-Za-z0-9]/', '', $word) == '') { return true; }
		global $wpdb;
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$words_table = $wpdb->prefix . 'spellcheck_words';
		
		if (is_numeric($word)) { return true; }
		if (preg_match("/^[0-9]{3}-[0-9]{4}-[0-9]{4}$/", $word)) { return true; }
		
		$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . addslashes($word) . "' AND ignore_word!=0");
		if (sizeof($ignore_word) >= 1) return true;

		return false;
	}

	function check_pages($rng_seed = 0, $is_running = false, $log_errors = true) {
		$page_list = null;
		global $scan_delay;
		if (!$is_running) sleep($scan_delay);
		
		ini_set('memory_limit','512M'); //Sets the PHP memory limit
		set_time_limit(600); 
		global $wpdb;
		
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		$options_list = $wpdb->get_results("SELECT * FROM $options_table");
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		
		$divi_check = wp_get_theme( 'Divi' );

		global $pro_included;
		$total_pages = 500;
		if ($pro_included) $total_pages = 1000;
		$total_words = 0;
		$page_count = 0;
		$word_count = 0;
		$error_count = 0;
		if ($options_list[136]->option_value == 'true') { $post_status = array('publish', 'draft'); }
		else { $post_status = array('publish'); }
		$page_list = get_pages(array('number' => PHP_INT_MAX, 'hierarchical' => 0, 'post_type' => 'page', 'post_status' => $post_status));
		if ($is_running != true) {
			wpsc_set_global_vars();
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}
			$ind_start_time = time();
		
		$max_time = ini_get('max_execution_time'); 

		$ignore_pages = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($page_list as $page) {
		
			array_shift($page_list);
			$ignore_flag = 'false';
			foreach($ignore_pages as $ignore_check) {
				if (strtoupper(trim($page->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }

			$page_count++;
			
			$words_content = $page->post_content;
			
			$words_content = preg_replace("/&lt;/", "<", $words_content);
			$words_content = preg_replace("/&gt;/", ">", $words_content);
			
			$words_content = do_shortcode($words_content);
			if ($divi_check->exists()) {
				global $wp_query;
				$wp_query->is_singular = true;

				$words_content =  apply_filters( 'the_content', $words_content );
			}
			
			$words_content = preg_replace("@<style[^>]*?>.*?</style>@siu",' ',$words_content);
			$words_content = preg_replace("@<script[^>]*?>.*?</script>@siu",' ',$words_content);
			$words_content = preg_replace("/(\<.*?\>)/",' ',$words_content);
			$words_content = preg_replace("/<iframe.+<\/iframe>/", " ", $words_content);
			$words_content = html_entity_decode(strip_tags($words_content), ENT_QUOTES, 'utf-8');
			$words_content = preg_replace("/(\[et_pb.*?\])/",' ', $words_content);
			$words_content = preg_replace("/(\[\/et_pb.*?\])/",' ', $words_content);
			$words_content = preg_replace("/(\[[1-9].*?\])/",' ', $words_content);
			$words_content = preg_replace("/(\[ICBOapproval.*?\])/",' ', $words_content);
			
			preg_match_all("/(\[.*?\])/", $words_content, $shortcodes); 
			
			if (sizeof($shortcodes) != 0) {
				foreach($shortcodes as $shortcode) {
					$ignore_shortcode = false;
					if(isset($ignore_list)) { 
						foreach($ignore_list as $ignore) {
						if (strlen($shortcode[0]) > 100) {
						} else {
							if (strtoupper($shortcode[0]) == stripslashes(strtoupper($ignore->word))) $ignore_shortcode = true;
						}
					}
					}
					if ($shortcode[0] != '' && !$ignore_shortcode && strlen($shortcode[0]) < 100) { array_push($error_list, array('word' => $shortcode[0], 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID)); 
					$error_count++;
					$total_words++;
					}
				}
			}
			
			if ($options_list[23]->option_value == 'true') {
				$words_content = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_content);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_content = preg_replace('/((http|https|ftp)\S+)/', '', $words_content);
				$words_content = preg_replace('/www\.\S+/', '', $words_content);
				$words_content = preg_replace('/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i', ' ', $words_content);
			}
			
			preg_match_all("/\S+\@\S+\.\S+/", $words_content, $emails); 
			
			if (sizeof($emails) != 0) {
				foreach($emails[0] as $email) {
					if ($email[0] != '') { array_push($error_list, array('word' => $email[0], 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID)); 
					$error_count++;
					$total_words++;
					}
				}
			}
			
			preg_match_all("/((http|https|ftp)\S+)/", $words_content, $urls); 
			
			if (sizeof($urls) != 0) {
				foreach($urls[0] as $url) {
					if ($url != '') { array_push($error_list, array('word' => $url, 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID)); 
					$error_count++;
					$total_words++;
					}
				}
			}
			
			$words_content = preg_replace('/((http|https|ftp)\S+)/', '', $words_content);
			
			preg_match_all("/www\.\S+/", $words_content, $urls); 
			
			if (sizeof($urls) != 0) {
				foreach($urls[0] as $url) {
					if ($url != '') { array_push($error_list, array('word' => $url, 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID)); 
					$error_count++;
					$total_words++;
					}
				}
			}
			
			$words_content = preg_replace('/www\.\S+/', '', $words_content);
			
			preg_match_all("/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i", $words_content, $urls); 
			
			if (sizeof($urls) != 0) {
				foreach($urls[0] as $url) {
					if ($url != '') { array_push($error_list, array('word' => $url, 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID)); 
					$error_count++;
					$total_words++;
					}
				}
			}
			
			$words_content = preg_replace('/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i', ' ', $words_content);
			$words_content = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_content);
			$words_content = preg_replace('/(\[.*?\])/', ' ', $words_content);
			
			$words_content = preg_replace("/[^A-Za-z'’`]+/m", " ", $words_content);
			$words_content = preg_replace("/[’`]+/m", "'", $words_content);
			$words_content = preg_replace("/'s/m", "", $words_content);
			$words = explode(" ", $words_content);

			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = preg_replace("/\'/","\'",$word);
				$ignore_check = preg_replace("/\'/","\'",$ignore_check);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$dict_word = str_replace("'", "\'", $dict_word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && !is_numeric($word)) {
							if ($page_count <= $total_pages) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => $word, 'page_name' => $page->post_title, 'page_type' => 'Page Content', 'page_id' => $page->ID));
							} else {
								$word_count++;
							}
						}
					}
				}
			}
		}		
		if (!$end_task) {
			$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
			$total_words = $total_words + intval($counter[0]->option_value);
			$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
			if ($page_count > $total_pages) $page_count = $total_pages;
			$wpdb->update($options_table, array('option_value' => $page_count), array('option_name' => 'page_count'));
			
			
			if(sizeof($error_list) > 0 && $log_errors) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$end_time = time();
				$total_time = time_elapsed($end_time - $start_time + 6);
				$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
			}
		}
		
		
		
		
		
		
		if ($log_errors) $wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'page_sip'));
		return $word_count;
	}
	add_action ('admincheckpages', 'check_pages', 10, 2);

	function check_posts($rng_seed = 0, $is_running = false, $log_errors = true) {
		$post_list = null;
		global $scan_delay;
		if (!$is_running) sleep($scan_delay);
		
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		$options_list = $wpdb->get_results("SELECT * FROM $options_table");
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		
		$divi_check = wp_get_theme( 'Divi' );

		global $pro_included;
		$total_posts = 500;
		if ($pro_included) $total_posts = 1000;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
		$max_time = ini_get('max_execution_time'); 
		if ($is_running != true) {
			wpsc_set_global_vars();
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");

		
		$post_types = get_post_types();
		$post_type_list = array();
		foreach ($post_types as $type) {
			if ($type != 'revision' && $type != 'page' && $type != 'slider' && $type != 'attachment' && $type != 'optionsframework' && $type != 'product' && $type != 'wpsc-product' && $type != 'wpcf7_contact_form' && $type != 'nav_menu_item' && $type != 'gal_display_source' && $type != 'lightbox_library')
				array_push($post_type_list, $type);
		}
		
		if ($options_list[137]->option_value == 'true') { $post_status = array('publish', 'draft'); }
		else { $post_status = array('publish'); }

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => $post_type_list, 'post_status' => $post_status));
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
		
			array_shift($posts_list);
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_content;
			$words_list = do_shortcode($words_list);
			if ($divi_check->exists()) {
				global $wp_query;
				$wp_query->is_singular = true;

				$words_content =  apply_filters( 'the_content', $words_content );
			}
			
			$words_list = preg_replace("/(\[.*?\])/",' ',$words_list);
			
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = preg_replace("/<iframe.+<\/iframe>/", " ", $words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			
			preg_match_all("/(\[.*?\])/", $words_list, $shortcodes); 
			
			if (sizeof($shortcodes) != 0) {
				foreach($shortcodes as $shortcode) {
					$ignore_shortcode = false;
					if(isset($ignore_list)) { 
						foreach($ignore_list as $ignore) {
						if (strlen($shortcode[0]) > 100) {
						} else {
							if (strtoupper($shortcode[0]) == stripslashes(strtoupper($ignore->word))) $ignore_shortcode = true;
						}
					}
					}
					if ($shortcode[0] != '' && !$ignore_shortcode && strlen($shortcode[0]) < 100) { array_push($error_list, array('word' => $shortcode[0], 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID)); //Add the shortcodes to the error list
					$error_count++;
					$total_words++;
					}
				}
			}
			
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i', ' ', $words_list);
			}
			
			preg_match_all("/\S+\@\S+\.\S+/", $words_list, $emails); 
			
			if (sizeof($emails[0]) != 0) {
				foreach($emails[0] as $email) {
					array_push($error_list, array('word' => $email, 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID)); 
					$error_count++;
					$total_words++;
				}
			}
			
			preg_match_all("/((http|https|ftp)\S+)/", $words_list, $urls); 
			
			if (sizeof($urls[0]) != 0) {
				foreach($urls[0] as $url) {
					$url = preg_replace("/[^a-zA-z.\-]/", " ", $url);
					array_push($error_list, array('word' => $url, 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID)); 
					$error_count++;
					$total_words++;
				}
			}
			
			$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
			
			preg_match_all("/www\.\S+/", $words_list, $urls); 
			
			if (sizeof($urls[0]) != 0) {
				foreach($urls[0] as $url) {
					array_push($error_list, array('word' => $url, 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID)); 
					$error_count++;
					$total_words++;
				}
			}
			
			$words_list = preg_replace('/www\.\S+/', '', $words_list);
			
			preg_match_all("/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i", $words_list, $urls); 
			
			if (sizeof($urls[0]) != 0) {
				foreach($urls[0] as $url) {
					array_push($error_list, array('word' => $url, 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID)); 
					$error_count++;
					$total_words++;
				}
			}
			
			
			$words_list = preg_replace('/(\S+\.(LY|AAA|AARP|ABARTH|ABB|ABBOTT|ABBVIE|ABC|ABLE|ABOGADO|ABUDHABI|AC|ACADEMY|ACCENTURE|ACCOUNTANT|ACCOUNTANTS|ACO|ACTIVE|ACTOR|AD|ADAC|ADS|ADULT|AE|AEG|AERO|AETNA|AF|AFAMILYCOMPANY|AFL|AG|AGAKHAN|AGENCY|AI|AIG|AIGO|AIRBUS|AIRFORCE|AIRTEL|AKDN|AL|ALFAROMEO|ALIBABA|ALIPAY|ALLFINANZ|ALLSTATE|ALLY|ALSACE|ALSTOM|AM|AMERICANEXPRESS|AMERICANFAMILY|AMEX|AMFAM|AMICA|AMSTERDAM|ANALYTICS|ANDROID|ANQUAN|ANZ|AO|AOL|APARTMENTS|APP|APPLE|AQ|AQUARELLE|AR|ARAMCO|ARCHI|ARMY|ARPA|ART|ARTE|AS|ASDA|ASIA|ASSOCIATES|AT|ATHLETA|ATTORNEY|AU|AUCTION|AUDI|AUDIBLE|AUDIO|AUSPOST|AUTHOR|AUTO|AUTOS|AVIANCA|AW|AWS|AX|AXA|AZ|AZURE|BA|BABY|BAIDU|BANAMEX|BANANAREPUBLIC|BAND|BANK|BAR|BARCELONA|BARCLAYCARD|BARCLAYS|BAREFOOT|BARGAINS|BASEBALL|BASKETBALL|BAUHAUS|BAYERN|BB|BBC|BBT|BBVA|BCG|BCN|BD|BE|BEATS|BEAUTY|BEER|BENTLEY|BERLIN|BEST|BESTBUY|BET|BF|BG|BH|BHARTI|BI|BIBLE|BID|BIKE|BING|BINGO|BIO|BIZ|BJ|BLACK|BLACKFRIDAY|BLANCO|BLOCKBUSTER|BLOG|BLOOMBERG|BLUE|BM|BMS|BMW|BN|BNL|BNPPARIBAS|BO|BOATS|BOEHRINGER|BOFA|BOM|BOND|BOO|BOOK|BOOKING|BOOTS|BOSCH|BOSTIK|BOT|BOUTIQUE|BOX|BR|BRADESCO|BRIDGESTONE|BROADWAY|BROKER|BROTHER|BRUSSELS|BS|BT|BUDAPEST|BUGATTI|BUILD|BUILDERS|BUSINESS|BUY|BUZZ|BV|BW|BY|BZ|BZH|CA|CAB|CAFE|CAL|CALL|CALVINKLEIN|CAM|CAMERA|CAMP|CANCERRESEARCH|CANON|CAPETOWN|CAPITAL|CAPITALONE|CAR|CARAVAN|CARDS|CARE|CAREER|CAREERS|CARS|CARTIER|CASA|CASE|CASEIH|CASH|CASINO|CAT|CATERING|CBA|CBN|CBRE|CBS|CC|CD|CEB|CENTER|CEO|CERN|CF|CFA|CFD|CG|CH|CHANEL|CHANNEL|CHASE|CHAT|CHEAP|CHINTAI|CHLOE|CHRISTMAS|CHROME|CHRYSLER|CHURCH|CI|CIPRIANI|CIRCLE|CISCO|CITADEL|CITI|CITIC|CITY|CITYEATS|CK|CL|CLAIMS|CLEANING|CLICK|CLINIC|CLINIQUE|CLOTHING|CLOUD|CLUB|CLUBMED|CM|CN|CO|COACH|CODES|COFFEE|COLLEGE|COLOGNE|COM|COMCAST|COMMBANK|COMMUNITY|COMPANY|COMPARE|COMPUTER|COMSEC|CONDOS|CONSTRUCTION|CONSULTING|CONTACT|CONTRACTORS|COOKING|COOKINGCHANNEL|COOL|COOP|CORSICA|COUNTRY|COUPON|COUPONS|COURSES|CR|CREDIT|CREDITCARD|CREDITUNION|CRICKET|CROWN|CRS|CRUISE|CRUISES|CSC|CU|CUISINELLA|CV|CW|CX|CY|CYMRU|CYOU|CZ|DABUR|DAD|DANCE|DATE|DATING|DATSUN|DAY|DCLK|DDS|DE|DEAL|DEALER|DEALS|DEGREE|DELIVERY|DELL|DELOITTE|DELTA|DEMOCRAT|DENTAL|DENTIST|DESI|DESIGN|DEV|DHL|DIAMONDS|DIET|DIGITAL|DIRECT|DIRECTORY|DISCOUNT|DISCOVER|DISH|DIY|DJ|DK|DM|DNP|DO|DOCS|DOCTOR|DODGE|DOG|DOHA|DOMAINS|DOT|DOWNLOAD|DRIVE|DTV|DUBAI|DUCK|DUNLOP|DUNS|DUPONT|DURBAN|DVAG|DVR|DZ|EARTH|EAT|EC|ECO|EDEKA|EDU|EDUCATION|EE|EG|EMAIL|EMERCK|ENERGY|ENGINEER|ENGINEERING|ENTERPRISES|EPOST|EPSON|EQUIPMENT|ER|ERICSSON|ERNI|ES|ESQ|ESTATE|ESURANCE|ET|EU|EUROVISION|EUS|EVENTS|EVERBANK|EXCHANGE|EXPERT|EXPOSED|EXPRESS|EXTRASPACE|FAGE|FAIL|FAIRWINDS|FAITH|FAMILY|FAN|FANS|FARM|FARMERS|FASHION|FAST|FEDEX|FEEDBACK|FERRARI|FERRERO|FI|FIAT|FIDELITY|FIDO|FILM|FINAL|FINANCE|FINANCIAL|FIRE|FIRESTONE|FIRMDALE|FISH|FISHING|FIT|FITNESS|FJ|FK|FLICKR|FLIGHTS|FLIR|FLORIST|FLOWERS|FLY|FM|FO|FOO|FOOD|FOODNETWORK|FOOTBALL|FORD|FOREX|FORSALE|FORUM|FOUNDATION|FOX|FR|FREE|FRESENIUS|FRL|FROGANS|FRONTDOOR|FRONTIER|FTR|FUJITSU|FUJIXEROX|FUND|FURNITURE|FUTBOL|FYI|GA|GAL|GALLERY|GALLO|GALLUP|GAME|GAMES|GAP|GARDEN|GB|GBIZ|GD|GDN|GE|GEA|GENT|GENTING|GEORGE|GF|GG|GGEE|GH|GI|GIFT|GIFTS|GIVES|GIVING|GL|GLADE|GLASS|GLE|GLOBAL|GLOBO|GM|GMAIL|GMBH|GMO|GMX|GN|GODADDY|GOLD|GOLDPOINT|GOLF|GOO|GOODHANDS|GOODYEAR|GOOG|GOOGLE|GOP|GOT|GOV|GP|GQ|GR|GRAINGER|GRAPHICS|GRATIS|GREEN|GRIPE|GROUP|GS|GT|GU|GUARDIAN|GUCCI|GUGE|GUIDE|GUITARS|GURU|GW|GY|HAMBURG|HANGOUT|HAUS|HBO|HDFC|HDFCBANK|HEALTH|HEALTHCARE|HELP|HELSINKI|HERE|HERMES|HGTV|HIPHOP|HISAMITSU|HITACHI|HIV|HK|HKT|HM|HN|HOCKEY|HOLDINGS|HOLIDAY|HOMEDEPOT|HOMEGOODS|HOMES|HOMESENSE|HONDA|HONEYWELL|HORSE|HOST|HOSTING|HOT|HOTELES|HOTMAIL|HOUSE|HOW|HR|HSBC|HT|HTC|HU|HUGHES|HYATT|HYUNDAI|IBM|ICBC|ICE|ICU|ID|IE|IEEE|IFM|IINET|IKANO|IL|IM|IMAMAT|IMDB|IMMO|IMMOBILIEN|IN|INDUSTRIES|INFINITI|INFO|ING|INK|INSTITUTE|INSURANCE|INSURE|INT|INTEL|INTERNATIONAL|INTUIT|INVESTMENTS|IO|IPIRANGA|IQ|IR|IRISH|IS|ISELECT|ISMAILI|IST|ISTANBUL|IT|ITAU|ITV|IVECO|IWC|JAGUAR|JAVA|JCB|JCP|JE|JEEP|JETZT|JEWELRY|JIO|JLC|JLL|JM|JMP|JNJ|JO|JOBS|JOBURG|JOT|JOY|JP|JPMORGAN|JPRS|JUEGOS|JUNIPER|KAUFEN|KDDI|KE|KERRYHOTELS|KERRYLOGISTICS|KERRYPROPERTIES|KFH|KG|KH|KI|KIA|KIM|KINDER|KINDLE|KITCHEN|KIWI|KM|KN|KOELN|KOMATSU|KOSHER|KP|KPMG|KPN|KR|KRD|KRED|KUOKGROUP|KW|KY|KYOTO|KZ|LA|LACAIXA|LADBROKES|LAMBORGHINI|LAMER|LANCASTER|LANCIA|LANCOME|LAND|LANDROVER|LANXESS|LASALLE|LAT|LATINO|LATROBE|LAW|LAWYER|LB|LC|LDS|LEASE|LECLERC|LEFRAK|LEGAL|LEGO|LEXUS|LGBT|LI|LIAISON|LIDL|LIFE|LIFEINSURANCE|LIFESTYLE|LIGHTING|LIKE|LILLY|LIMITED|LIMO|LINCOLN|LINDE|LINK|LIPSY|LIVE|LIVING|LIXIL|LK|LOAN|LOANS|LOCKER|LOCUS|LOFT|LOL|LONDON|LOTTE|LOTTO|LOVE|LPL|LPLFINANCIAL|LR|LS|LT|LTD|LTDA|LU|LUNDBECK|LUPIN|LUXE|LUXURY|LV|LY|MA|MACYS|MADRID|MAIF|MAISON|MAKEUP|MAN|MANAGEMENT|MANGO|MARKET|MARKETING|MARKETS|MARRIOTT|MARSHALLS|MASERATI|MATTEL|MBA|MC|MCD|MCDONALDS|MCKINSEY|MD|ME|MED|MEDIA|MEET|MELBOURNE|MEME|MEMORIAL|MEN|MENU|MEO|METLIFE|MG|MH|MIAMI|MICROSOFT|MIL|MINI|MINT|MIT|MITSUBISHI|MK|ML|MLB|MLS|MM|MMA|MN|MO|MOBI|MOBILY|MODA|MOE|MOI|MOM|MONASH|MONEY|MONSTER|MONTBLANC|MOPAR|MORMON|MORTGAGE|MOSCOW|MOTO|MOTORCYCLES|MOV|MOVIE|MOVISTAR|MP|MQ|MR|MS|MSD|MT|MTN|MTPC|MTR|MU|MUSEUM|MUTUAL|MUTUELLE|MV|MW|MX|MY|MZ|NA|NAB|NADEX|NAGOYA|NAME|NATIONWIDE|NATURA|NAVY|NBA|NC|NE|NEC|NET|NETBANK|NETFLIX|NETWORK|NEUSTAR|NEW|NEWHOLLAND|NEWS|NEXT|NEXTDIRECT|NEXUS|NF|NFL|NG|NGO|NHK|NI|NICO|NIKE|NIKON|NINJA|NISSAN|NISSAY|NL|NO|NOKIA|NORTHWESTERNMUTUAL|NORTON|NOW|NOWRUZ|NOWTV|NP|NR|NRA|NRW|NTT|NU|NYC|NZ|OBI|OBSERVER|OFF|OFFICE|OKINAWA|OLAYAN|OLAYANGROUP|OLDNAVY|OLLO|OM|OMEGA|ONE|ONG|ONL|ONLINE|ONYOURSIDE|OOO|OPEN|ORACLE|ORANGE|ORG|ORGANIC|ORIENTEXPRESS|ORIGINS|OSAKA|OTSUKA|OTT|OVH|PA|PAGE|PAMPEREDCHEF|PANASONIC|PANERAI|PARIS|PARS|PARTNERS|PARTS|PARTY|PASSAGENS|PAY|PCCW|PE|PET|PF|PFIZER|PG|PH|PHARMACY|PHILIPS|PHOTO|PHOTOGRAPHY|PHOTOS|PHYSIO|PIAGET|PICS|PICTET|PICTURES|PID|PIN|PING|PINK|PIONEER|PIZZA|PK|PL|PLACE|PLAY|PLAYSTATION|PLUMBING|PLUS|PM|PN|PNC|POHL|POKER|POLITIE|PORN|POST|PR|PRAMERICA|PRAXI|PRESS|PRIME|PRO|PROD|PRODUCTIONS|PROF|PROGRESSIVE|PROMO|PROPERTIES|PROPERTY|PROTECTION|PRU|PRUDENTIAL|PS|PT|PUB|PW|PWC|PY|QA|QPON|QUEBEC|QUEST|QVC|RACING|RADIO|RAID|RE|READ|REALESTATE|REALTOR|REALTY|RECIPES|RED|REDSTONE|REDUMBRELLA|REHAB|REISE|REISEN|REIT|RELIANCE|REN|RENT|RENTALS|REPAIR|REPORT|REPUBLICAN|REST|RESTAURANT|REVIEW|REVIEWS|REXROTH|RICH|RICHARDLI|RICOH|RIGHTATHOME|RIL|RIO|RIP|RO|ROCHER|ROCKS|RODEO|ROGERS|ROOM|RS|RSVP|RU|RUHR|RUN|RW|RWE|RYUKYU|SA|SAARLAND|SAFE|SAFETY|SAKURA|SALE|SALON|SAMSCLUB|SAMSUNG|SANDVIK|SANDVIKCOROMANT|SANOFI|SAP|SAPO|SARL|SAS|SAVE|SAXO|SB|SBI|SBS|SC|SCA|SCB|SCHAEFFLER|SCHMIDT|SCHOLARSHIPS|SCHOOL|SCHULE|SCHWARZ|SCIENCE|SCJOHNSON|SCOR|SCOT|SD|SE|SEAT|SECURE|SECURITY|SEEK|SELECT|SENER|SERVICES|SES|SEVEN|SEW|SEX|SEXY|SFR|SG|SH|SHANGRILA|SHARP|SHAW|SHELL|SHIA|SHIKSHA|SHOES|SHOP|SHOPPING|SHOUJI|SHOW|SHOWTIME|SHRIRAM|SI|SILK|SINA|SINGLES|SITE|SJ|SK|SKI|SKIN|SKY|SKYPE|SL|SLING|SM|SMART|SMILE|SN|SNCF|SO|SOCCER|SOCIAL|SOFTBANK|SOFTWARE|SOHU|SOLAR|SOLUTIONS|SONG|SONY|SOY|SPACE|SPIEGEL|SPOT|SPREADBETTING|SR|SRL|SRT|ST|STADA|STAPLES|STAR|STARHUB|STATEBANK|STATEFARM|STATOIL|STC|STCGROUP|STOCKHOLM|STORAGE|STORE|STREAM|STUDIO|STUDY|STYLE|SU|SUCKS|SUPPLIES|SUPPLY|SUPPORT|SURF|SURGERY|SUZUKI|SV|SWATCH|SWIFTCOVER|SWISS|SX|SY|SYDNEY|SYMANTEC|SYSTEMS|SZ|TAB|TAIPEI|TALK|TAOBAO|TARGET|TATAMOTORS|TATAR|TATTOO|TAX|TAXI|TC|TCI|TD|TDK|TEAM|TECH|TECHNOLOGY|TEL|TELECITY|TELEFONICA|TEMASEK|TENNIS|TEVA|TF|TG|TH|THD|THEATER|THEATRE|TIAA|TICKETS|TIENDA|TIFFANY|TIPS|TIRES|TIROL|TJ|TJMAXX|TJX|TK|TKMAXX|TL|TM|TMALL|TN|TO|TODAY|TOKYO|TOOLS|TOP|TORAY|TOSHIBA|TOTAL|TOURS|TOWN|TOYOTA|TOYS|TR|TRADE|TRADING|TRAINING|TRAVEL|TRAVELCHANNEL|TRAVELERS|TRAVELERSINSURANCE|TRUST|TRV|TT|TUBE|TUI|TUNES|TUSHU|TV|TVS|TW|TZ|UA|UBANK|UBS|UCONNECT|UG|UK|UNICOM|UNIVERSITY|UNO|UOL|UPS|US|UY|UZ|VA|VACATIONS|VANA|VANGUARD|VC|VE|VEGAS|VENTURES|VERISIGN|VERSICHERUNG|VET|VG|VI|VIAJES|VIDEO|VIG|VIKING|VILLAS|VIN|VIP|VIRGIN|VISA|VISION|VISTA|VISTAPRINT|VIVA|VIVO|VLAANDEREN|VN|VODKA|VOLKSWAGEN|VOLVO|VOTE|VOTING|VOTO|VOYAGE|VU|VUELOS|WALES|WALMART|WALTER|WANG|WANGGOU|WARMAN|WATCH|WATCHES|WEATHER|WEATHERCHANNEL|WEBCAM|WEBER|WEBSITE|WED|WEDDING|WEIBO|WEIR|WF|WHOSWHO|WIEN|WIKI|WILLIAMHILL|WIN|WINDOWS|WINE|WINNERS|WME|WOLTERSKLUWER|WOODSIDE|WORK|WORKS|WORLD|WOW|WS|WTC|WTF|XBOX|XEROX|XFINITY|XIHUAN|XIN|XPERIA|XXX|XYZ|YACHTS|YAHOO|YAMAXUN|YANDEX|YE|YODOBASHI|YOGA|YOKOHAMA|YOU|YOUTUBE|YT|YUN|ZA|ZAPPOS|ZARA|ZERO|ZIP|ZIPPO|ZM|ZONE|ZUERICH|ZW)\S+)/i', ' ', $words_list);
			$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			$words_list = preg_replace('/(\[.*?\])/', ' ', $words_list);
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_check = str_replace("'", "\'", $ignore_check);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$dict_word = str_replace("'", "\'", $dict_word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_type' => 'Post Content', 'page_id' => $post->ID));
							} else {
								if (strlen($word) <= 100) $word_count++;
							}
						}
					}
				}	
			}
		}
		
		if (!$end_task) {
		
		$word_count = $word_count + intval($counter[0]->option_value);
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		$wpdb->update($options_table, array('option_value' => $post_count), array('option_name' => 'post_count'));
		
		
		
		if(sizeof($error_list) > 0 && $log_errors) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		}
		
		
		
		
		
		
		if ($log_errors) $wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'post_sip'));
		return $word_count;
	}
	add_action ('admincheckposts', 'check_posts',10,2);
	
	
function check_author_nickname($is_running = false, $posts_list) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
		$word_count = 0;
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='nickname' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word)))$ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) 
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_type' => 'Author Nickname', 'page_id' => $post->ID));
					}
				}	
			}
		}
		
		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
		
		
		
		
}

function check_author_firstname($is_running = false, $posts_list) {
			global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
		$word_count = 0;
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='first_name' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_type' => 'Author First Name', 'page_id' => $post->ID));
							} else {
								$word_count++;
							}
						}
					}
				}	
			}
		}
		
		$word_count = $word_count + intval($counter[0]->option_value);
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		
		
		
		
		
}

function check_author_lastname($is_running = false, $posts_list) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
		$word_count = 0;
		$max_time = ini_get('max_execution_time'); 
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='last_name' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => $word, 'page_name' => $post->post_title, 'page_type' => 'Author Last Name', 'page_id' => $post->ID));
						}
					}
				}	
			}
		}
		
		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		
		
		
		
		
}

function check_author_bio($is_running = false, $posts_list) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
		$word_count = 0;
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='description' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_type' => 'Author Biographical Info', 'page_id' => $post->ID));
						}
					}
				}	
			}
		}

		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;

		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		
		
		
		
		
}

function check_site_name($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$opt_table = $wpdb->prefix . 'options';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
$word_count = 0;
		$max_time = ini_get('max_execution_time'); 
		if ($is_running != true) {
			wpsc_set_global_vars();
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");

		$posts_list = $wpdb->get_results("SELECT * FROM $opt_table WHERE option_name='blogname'");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$words_list = $post->option_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;				
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_check = str_replace("'", "\'", $ignore_check);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$dict_word = str_replace("'", "\'", $dict_word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => "Site Name", 'page_type' => 'Site Name'));
						}
					}
				}	
			}
			$end_task = false;
			if (((time() - $ind_start_time) >= $max_time - 3) && count($page_list) > 0) {
				$end_task = true;
				wp_schedule_single_event(time() - 10 + 1, 'admincheckposts', array(true, $posts_list));
				break;
			}
			if($end_task) break;
		}
		
		
			
			
			
			
		
		if (!$end_task) {
		
		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		
		
		
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "'), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		}
		
		
		
		
		
}

function check_site_tagline($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$opt_table = $wpdb->prefix . 'options';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$error_count = 0;
$word_count = 0;
		$max_time = ini_get('max_execution_time'); 
		if ($is_running != true) {
			wpsc_set_global_vars();
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");

		$posts_list = $wpdb->get_results("SELECT * FROM $opt_table WHERE option_name='blogdescription'");
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$words_list = $post->option_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							$word = addslashes($word);
							$error_count++;
							array_push($error_list, array('word' => addslashes($word), 'page_name' => "Site Tagline", 'page_type' => 'Site Tagline'));
						}
					}
				}	
			}
			$end_task = false;
			if (((time() - $ind_start_time) >= $max_time - 3) && count($page_list) > 0) {
				$end_task = true;
				wp_schedule_single_event(time() - 10 + 1, 'admincheckposts', array(true, $posts_list));
				break;
			}
			if($end_task) break;
		}
		
		
			
			
			
			
		
		if (!$end_task) {
		
		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		if ($post_count > $total_posts) $post_count = $total_posts;
		
		
		
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "'), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		}
		
		
		
		
		
}

function check_authors($rng_seed = 0) {

	global $scan_delay;
	sleep($scan_delay);
	
	global $wpdb;
	global $ent_included;
	global $pro_included;
	$table_name = $wpdb->prefix . 'spellcheck_words';
	$options_table = $wpdb->prefix . 'spellcheck_options';
	$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
	$start_time = time(); 
	
	$post_table = $wpdb->prefix . 'posts';
	$posts_list = $wpdb->get_results("SELECT * FROM $post_table GROUP BY post_author");

	check_author_nickname(true, $posts_list);
	check_author_firstname(true, $posts_list);
	check_author_lastname(true, $posts_list);
	check_author_bio(true, $posts_list);
	check_site_tagline(true);
	check_site_name(true);
	if ($pro_included) {
		check_author_seotitle_pro(true);
		check_author_seodesc_pro(true);
	} elseif ($ent_included) {
		check_author_seotitle_ent(true);
		check_author_seodesc_ent(true);
	}
	
	$end_time = time();
	$total_time = time_elapsed($end_time - $start_time + 6);
	$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
	$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'author_sip'));
}
add_action ('admincheckauthors', 'check_authors');

	function check_cf7($rng_seed = 0, $is_running = false) {
		global $scan_delay;
		if (!$is_running) sleep($scan_delay);
		global $wpdb;
		global $ent_included;
		global $pro_included;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

		global $pro_included;
		$total_posts = 500;
		if ($pro_included) $total_posts = 1000;
		if ($ent_included) $total_posts = PHP_INT_MAX;
		$total_words = 0;
		$post_count = 0;
		$error_count = 0;
$word_count = 0;
		$word_count = 0;
		if ($is_running != true) {
			wpsc_set_global_vars();
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		$options_list = $wpdb->get_results("SELECT option_value FROM $options_table");
		
		if ($options_list[136]->option_value == 'true') { $post_status = array('publish', 'draft'); }
		else { $post_status = array('publish'); }

		$posts_list = get_posts(array('posts_per_page' => $total_posts, 'post_type' => 'wpcf7_contact_form', 'post_status' => $post_status));
		
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 8;

		foreach ($posts_list as $post) {
			array_shift($posts_list);
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_content;
			$words_list = preg_replace('/(?<!\\r)\\n.+/msi', '', $words_list); 
			$words_list = preg_replace("/(\[.*?\])/s",' ',$words_list);
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/([a-z1-9]+\.(com|ca|org|net|info|gov))\S+/i', ' ', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", '', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '' && preg_match('/[^a-zA-Z]/', $word) != true) {
							$word = addslashes($word);
							array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_type' => 'Contact Form 7', 'page_id' => $post->ID));
							$error_count++;
						}
					}
				}	
			}
		}
		$word_count = $word_count + intval($counter[0]->option_value);
		
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='total_word_count';");
		$total_words = $total_words + intval($counter[0]->option_value);
		$wpdb->update($options_table, array('option_value' => $total_words), array('option_name' => 'total_word_count'));
		$counter = $wpdb->get_results("SELECT option_value FROM $options_table WHERE option_name ='post_count';");
		$post_count = $post_count + intval($counter[0]->option_value);
		if ($post_count > $total_posts) $post_count = $total_posts;
		$wpdb->update($options_table, array('option_value' => $post_count), array('option_name' => 'post_count'));
		
		
		
		
		if(sizeof($error_list) > 0) { 
			$sql = "INSERT INTO $table_name (word, page_name, page_type, page_id) VALUES ";
			foreach ($error_list as $error) {
				if ($error['word'] != '') $sql .= "('" . addslashes($error['word']) . "', '" . addslashes($error['page_name']) . "', '" . $error['page_type'] . "', " . $error['page_id'] . "), ";
			}
			$sql = trim($sql, ", ");
			$wpdb->query($sql);
			}
			$sql_count++;
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'cf7_sip'));
		
		
		
		
		
	}
	add_action ('admincheckcf7', 'check_cf7');

	function clear_results($clear_type = '') {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'total_word_count')); 
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'page_count')); 
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'post_count')); 
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'media_count')); 

		$wpdb->delete($table_name, array('ignore_word' => false));
		if ($clear_type == 'full') {
			$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'pro_word_count')); 
		}
	}
	
	function clear_empty_results($clear_type = '') {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_empty';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'empty_page_count')); 
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'empty_post_count')); 
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'empty_media_count')); 

		$wpdb->delete($table_name, array('ignore_word' => false));
		
		if ($clear_type == 'full') {
			$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'empty_factor')); 
			$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'pro_empty_count')); 
		} 
	}
	
	function set_scan_in_progress($rng_seed = 0) {
		global $wpdb;
		global $pro_included;
		global $ent_included;
		global $wpsc_settings;
		$options_table = $wpdb->prefix . 'spellcheck_options';
		
		$settings = $wpsc_settings;
		
		$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'entire_scan'));
		
		if ($settings[4]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'page_sip'));
		if ($settings[5]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'post_sip'));
		if ($settings[37]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'cf7_sip'));
		if ($settings[44]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'author_sip'));
			
		if ($ent_included || $pro_included) {
		if ($settings[7]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'menu_sip'));
		if ($settings[12]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'page_title_sip'));
		if ($settings[13]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'post_title_sip'));
		if ($settings[14]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'tag_title_sip'));
		if ($settings[15]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'cat_title_sip'));
		if ($settings[16]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'seo_desc_sip'));
		if ($settings[17]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'seo_title_sip'));
		if ($settings[18]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'page_slug_sip'));
		if ($settings[19]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'post_slug_sip'));
		if ($settings[30]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'slider_sip'));
		if ($settings[31]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'media_sip'));
		if ($settings[38]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'tag_desc_sip'));
		if ($settings[39]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'tag_slug_sip'));
		if ($settings[40]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'cat_desc_sip'));
		if ($settings[41]->option_value == 'true')
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'cat_slug_sip'));
		if ($settings[36]->option_value == 'true' && (is_plugin_active('woocommerce/woocommerce.php') || is_plugin_active('wp-e-commerce/wp-shopping-cart.php')))
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'ecommerce_sip'));
		}
	}
	
	function wpsc_clear_scan() {
		global $wpdb;
		global $wpsc_settings;
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$settings = $wpsc_settings;
		
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'entire_scan'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'page_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'post_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'cf7_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'author_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'menu_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'page_title_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'post_title_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'tag_title_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'cat_title_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'seo_desc_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'seo_title_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'page_slug_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'post_slug_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'slider_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'media_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'tag_desc_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'tag_slug_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'cat_desc_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'cat_slug_sip'));
		$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'ecommerce_sip'));
	}
	
	function check_errors_wpsc() {
		global $wpdb;
		global $ent_included;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		set_time_limit(600); 
		
		$settings = $wpdb->get_results('SELECT option_value FROM ' . $options_table);
		
		$wpdb->update($options_table, array('option_value' => '0'), array('option_name' => 'pro_word_count')); 
		
		$error_count = 0;
		
		$error_count += check_posts(0, false, false);
		$error_count += check_pages(0, false, false);
		$error_count += check_menus_free();
		$error_count += check_page_title_free();
		$error_count += check_post_title_free();
		$error_count += check_post_tags_free();
		$error_count += check_post_tags_desc_free();
		$error_count += check_post_tags_slug_free();
		$error_count += check_post_categories_free();
		$error_count += check_post_categories_desc_free();
		$error_count += check_post_categories_slug_free();
		$error_count += check_yoast_free();
		$error_count += check_seo_titles_free();
		$error_count += check_page_slugs_free();
		$error_count += check_post_slugs_free();
		$error_count += check_slider_titles_free();
		$error_count += check_slider_captions_free();
		if (is_plugin_active("smart-slider-2/smart-slider-2.php")) {
			$error_count += check_smart_slider_titles_free();
			$error_count += check_smart_slider_captions_free();
		}
		if (is_plugin_active("slider-image/slider.php")) {
			$error_count += check_it_slider_captions_free();
			$error_count += check_it_slider_titles_free();
		}
		$error_count += check_media_titles_free();
		$error_count += check_media_descriptions_free();
		$error_count += check_media_captions_free();
		$error_count += check_media_alt_free();
		$error_count += check_author_seotitle_free();
		$error_count += check_author_seodesc_free();
		
		$loc = dirname(__FILE__) . "/debug.log";
		$debug_file = fopen($loc, 'a');
		$debug_var = fwrite( $debug_file, "Error Count: " . $error_count . "\r\n" );
		fclose($debug_file);
		
		$wpdb->update($options_table, array('option_value' => $error_count), array('option_name' => 'pro_word_count'));
		$wpdb->update($options_table, array('option_value' => "false"), array('option_name' => 'free_sip'));
	}
	add_action ('admincheckerrorswpsc', 'check_errors_wpsc');

	function scan_site_event($rng_seed = 0) {
		ini_set('memory_limit','512M'); //Sets the PHP memory limit
		set_time_limit(600);
		global $wpdb;
		global $pro_included;
		global $ent_included;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$start_time = time(); 
		$wpdb->update($options_table, array('option_value' => $start_time), array('option_name' => 'scan_start_time')); 

		$settings = $wpdb->get_results('SELECT option_value FROM ' . $options_table); //4 = Pages, 5 = Posts, 6 = Theme, 7 = Menus
		
		wpsc_set_global_vars();
		if (!$ent_included && !$pro_included) wp_schedule_single_event(time(), 'admincheckerrorswpsc');
		
		if ($ent_included) {
		if ($settings[36]->option_value =='true' && (is_plugin_active('woocommerce/woocommerce.php') || is_plugin_active('wp-e-commerce/wp-shopping-cart.php')))
			wp_schedule_single_event(time(), 'admincheckecommerce_ent', array ($rng_seed, true));
		if ($settings[41]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategoriesslugs_ent', array ($rng_seed, true));
		if ($settings[7]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckmenus_ent', array ($rng_seed, true));
		if ($settings[12]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpagetitles_ent', array ($rng_seed, true));
		if ($settings[13]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttitles_ent', array ($rng_seed, true));
		if ($settings[14]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttags_ent', array ($rng_seed, true));
		if ($settings[15]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategories_ent', array ($rng_seed, true));
		if ($settings[16]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckseodesc_ent', array ($rng_seed, true));
		if ($settings[17]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckseotitles_ent', array ($rng_seed, true));
		if ($settings[18]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpageslugs_ent', array ($rng_seed, true));
		if ($settings[19]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpostslugs_ent', array ($rng_seed, true));
		if ($settings[30]->option_value =='true')
			wp_schedule_single_event(time(), 'adminchecksliders_ent', array ($rng_seed, true));
		if ($settings[31]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckmedia_ent', array ($rng_seed, true));
		if ($settings[38]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttagsdesc_ent', array ($rng_seed, true));
		if ($settings[39]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttagsslugs_ent', array ($rng_seed, true));
		if ($settings[40]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategoriesdesc_ent', array ($rng_seed, true));
		if ($settings[37]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcf7', array ($rng_seed, true));
		if ($settings[44]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckauthors', array ($rng_seed, true));
		if ($settings[5]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposts_ent', array ($rng_seed, true));
		if ($settings[4]->option_value == 'true')
			wp_schedule_single_event(time(), 'admincheckpages_ent', array ($rng_seed, true));
		} else {
		if ($settings[4]->option_value == 'true')
			wp_schedule_single_event(time(), 'admincheckpages', array ($rng_seed ));
		if ($settings[5]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposts', array ($rng_seed ));
		if ($settings[44]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckauthors', array ($rng_seed));
		if ($pro_included) {
		if ($settings[39]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttagsslugs', array ($rng_seed));
		if ($settings[7]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckmenus', array ($rng_seed));
		if ($settings[12]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpagetitles', array ($rng_seed));
		if ($settings[13]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttitles', array ($rng_seed));
		if ($settings[14]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttags', array ($rng_seed));
		if ($settings[15]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategories', array ($rng_seed));
		if ($settings[16]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckseodesc', array ($rng_seed));
		if ($settings[17]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckseotitles', array ($rng_seed));
		if ($settings[18]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpageslugs', array ($rng_seed));
		if ($settings[19]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckpostslugs', array ($rng_seed));
		if ($settings[30]->option_value =='true')
			wp_schedule_single_event(time(), 'adminchecksliders_pro', array ($rng_seed));
		if ($settings[31]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckmedia_pro', array ($rng_seed));
		if ($settings[38]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckposttagsdesc', array ($rng_seed));
		if ($settings[40]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategoriesdesc', array ($rng_seed));
		if ($settings[41]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcategoriesslugs', array ($rng_seed));
		if ($settings[36]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckecommerce', array ($rng_seed));
		}
		if ($settings[37]->option_value =='true')
			wp_schedule_single_event(time(), 'admincheckcf7', array ($rng_seed));
		}
	}
	add_action ('adminscansite', 'scan_site_event');

	function time_elapsed($secs){
		$secs += 6;
	    $bit = array(
	        ' year'        => $secs / 31556926 % 12,
	        ' week'        => $secs / 604800 % 52,
	        ' day'        => $secs / 86400 % 7,
	        ' hour'        => $secs / 3600 % 24,
	        ' minute'    => $secs / 60 % 60,
	        ' second'    => $secs % 60
	        );
        
	    foreach($bit as $k => $v){
	        if($v > 1)$ret[] = $v . $k . 's';
	        if($v == 1)$ret[] = $v . $k;
	        }
	    array_splice($ret, count($ret)-1, 0, ' ');
	    $ret[] = '';
    
	    return join(' ', $ret);
	    }

	function send_test_email() {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
		set_time_limit(600); 

		$settings = $wpdb->get_results('SELECT option_value FROM ' . $table_name . ' WHERE option_name="email_address";');
		$words_list = $wpdb->get_results('SELECT word FROM ' . $words_table . ' WHERE ignore_word is false');
		
		$output = 'This is a test email sent from WP Spell Check on ' . get_option( 'blogname' );
		$headers  = "MIME-Version: 1.0\r\n";
		$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
		$headers .= "From: " . get_option( 'admin_email' );
		

		$to_emails = explode(',', $settings[0]->option_value);
		$valid_email = false;
		foreach($to_emails as $email_test) {
			if (!filter_var($email_test, FILTER_VALIDATE_EMAIL) === false) {
				$valid_email = true;
			}
		}
		if (!$valid_email) {
			return 'Please enter a valid email address';
		}
		//array_walk($to_emails, 'trim_value');

		if (wp_mail($to_emails, 'Test Email from WP Spell Check', $output, $headers)) {
			return "<h3 style='color: rgb(0, 115, 0);'>A test email has been sent</h3>";
		} else {
			return "An error has occurring in sending the test email";
		}
	}

	function email_admin() {
		global $wpdb;
		global $pro_included;
		global $ent_included;
		$table_name = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$empty_table = $wpdb->prefix . 'spellcheck_empty';
		set_time_limit(600); 

		$settings = $wpdb->get_results('SELECT option_value FROM ' . $table_name . ' WHERE option_name="email_address";');
		$words_list = $wpdb->get_results('SELECT word FROM ' . $words_table . ' WHERE ignore_word is false');
		$empty_list = $wpdb->get_results('SELECT word FROM ' . $empty_table . ' WHERE ignore_word is false');
		$login_url = wp_login_url();
		
		$date = date('l jS') . " of " . date('F Y') . " at " . date('g:i:s A');
		$options_url = get_site_url() . '/wp-admin/admin.php?page=wp-spellcheck-options.php';

		$output = '<strong>This email was sent from your website "Persyo Marketing" by the WP Spell Check plugin on ' . $date . '</strong><br /><br />';
		 
		$output .= '<strong>We have finished the scan of your website and detected:</strong><br /><br />';
		
		$output .= '<strong>- ' . sizeof($words_list) . ' Spelling Errors</strong><br /><br />';
		
		$output .= '<strong>- ' . sizeof($empty_list) . ' Empty Fields</strong> ';
		$output .= '<strong><a href="' . $login_url . '">Click here</a> to fix them now to improve your website Literacy Factor and SEO.</strong><br /><br />';
		
		$output .= '------------------------------------------------------------------------<br />';
		 
		if (!$pro_included && !$ent_included) $output .= 'NOTE: You are using the free version of WP Spell check. Upgrade to Premium today for just $2.00 per month!';

		$headers  = "MIME-Version: 1.0\r\n";
		$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";
		$headers .= "From: " . get_option( 'admin_email' );

		$to_emails = explode(',', $settings[0]->option_value);
		//array_walk($to_emails, 'trim_value');

		wp_mail($to_emails, 'Misspelled Words on ' . get_option( 'blogname' ), $output, $headers);
	}

	
	function show_feature_window() {
		echo "<div class='request-feature-container'>";
		echo "<div class='request-feature-popup' style='display: none;'>";
		echo "<a href='' class='close-popup'>X</a>";
		echo "<img src='" . plugin_dir_url( __FILE__ ) . "images/logo.png' alt='WP Spell Check' /><br />";
		echo "<h3>We love hearing from you</h3>";
		echo "<p>Please report your problem to make the WP Spell Check plugin better</p>";
		echo "<a href='https://www.wpspellcheck.com/report-a-problem' target='_blank'><button>Report a Problem</button></a>";
		echo "<p>Please note: Support requests will not be handled through this form</p>";
		echo "</div>";
		echo "<div class='request-feature'><a href='' class='request-feature-link'>Report a Problem</a></div>";
		echo"</div>";
	}
	
	function check_author_seotitle_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$max_time = ini_get('max_execution_time'); 
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;
		
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = $wpdb->get_results("SELECT * FROM $post_table GROUP By post_author");

		foreach ($posts_list as $post) {
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='wpseo_title' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Author SEO Title'));
							} else {
								
							}
						}
					}
				}	
			}
			$end_task = false;
			if (((time() - $ind_start_time) >= $max_time - 3) && count($page_list) > 0) {
				$end_task = true;
				wp_schedule_single_event(time() - 10 + 1, 'admincheckposts', array(true, $posts_list));
				break;
			}
			if($end_task) break;
		}
		if (!$end_task) {
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
		
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
			}
		}
}

function check_author_seodesc_free($is_running = false) {
			global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$post_table = $wpdb->prefix . 'posts';
		$user_table = $wpdb->prefix . 'usermeta';
		set_time_limit(600); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		$max_time = ini_get('max_execution_time'); 
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;
		$ind_start_time = time();

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = $wpdb->get_results("SELECT * FROM $post_table GROUP By post_author");

		foreach ($posts_list as $post) {
			$author = $wpdb->get_results("SELECT * FROM $user_table WHERE meta_key='wpseo_metadesc' AND user_id='$post->post_author'");

			$words_list = $author[0]->meta_value;
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Author SEO Description'));
							} else {
								
							}
						}
					}
				}	
			}
			$end_task = false;
			if (((time() - $ind_start_time) >= $max_time - 3) && count($page_list) > 0) {
				$end_task = true;
				wp_schedule_single_event(time() - 10 + 1, 'admincheckposts', array(true, $posts_list));
				break;
			}
			if($end_task) break;
		}
		if (!$end_task) {
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
		}
}
	

	function check_menus_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'posts';
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		

		$menus = $wpdb->get_results('SELECT post_title, ID FROM ' . $table_name . ' WHERE post_type ="nav_menu_item" LIMIT 500;');
		
		foreach($menus as $menu) {
			$word_list = html_entity_decode(strip_tags($menu->post_title), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						$table_name = $wpdb->prefix . 'spellcheck_words';						
						
						$word = addslashes($word);
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && trim($word) != '') {
							$error_count++; array_push($error_list, array('word' => $word, 'page_name' => $menu->post_title, 'page_id' => $menu->ID, 'page_type' => 'Menu Item'));
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_page_title_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);

		
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;
		$page_ids = get_all_page_ids();

		
		$max_pages = 500;
		if (sizeof($page_ids) < 500) $max_pages = sizeof($page_ids);

		for ($x=0; $x<$max_pages; $x++) {
			$words = array();
			$page = get_post( $page_ids[$x] );
			$word_list = html_entity_decode(strip_tags($page->post_title), ENT_QUOTES, 'utf-8');		if ($options_list[23]->option_value == 'true') {
				$word_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $word_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$word_list = preg_replace('/((http|https|ftp)\S+)/', ' ', $word_list);
				$word_list = preg_replace('/www\.\S+/', ' ', $word_list);
				$word_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $word_list);
			}
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $page->post_title, 'page_id' => $page->ID, 'page_type' => 'Page Title'));
					}
				}
			}	
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_post_title_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);

		
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		

		$post_types = get_post_types();
		$post_type_list = array();
		foreach ($post_types as $type) {
			if ($type != 'revision' && $type != 'page' && $type != 'nav_menu_item' && $type != 'optionsframework' && $type != 'slider' && $type != 'attachment' && $type != 'lightbox_library' && $type != 'display_type' && $type != 'gal_display_source')
				array_push($post_type_list, $type);
		}

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => $post_type_list, 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->post_title), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$word_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $word_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$word_list = preg_replace('/((http|https|ftp)\S+)/', ' ', $word_list);
				$word_list = preg_replace('/www\.\S+/', ' ', $word_list);
				$word_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $word_list);
			}
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Post Title'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

function check_post_tags_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$tags_list = get_tags();
		

		foreach ($tags_list as $tag) {					
			$words = array();
			$words = explode(' ', strip_tags(html_entity_decode($tag->name)));
			
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}
					

					if (!$in_dictionary) {
					
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $tag->name, 'page_id' => $tag->term_id, 'page_type' => 'Tag Title'));
					}
				}
			}			
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	
function check_post_tags_desc_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$tags_list = get_tags();
		

		foreach ($tags_list as $tag) {					
			$words = array();
			$words = explode(' ', strip_tags(html_entity_decode($tag->description)));
			
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}
					

					if (!$in_dictionary) {
					
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $tag->name, 'page_id' => $tag->term_id, 'page_type' => 'Tag Description'));
					}
				}
			}			
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	
function check_post_tags_slug_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$tags_list = get_tags();
		

		foreach ($tags_list as $tag) {					
			$words = array();
			$words = explode('-', strip_tags(html_entity_decode($tag->slug)));
			
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}
					

					if (!$in_dictionary) {
					
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $tag->name, 'page_id' => $tag->term_id, 'page_type' => 'Tag Slug'));
					}
				}
			}			
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_post_categories_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$cats_list = get_categories();

		foreach ($cats_list as $cat) {
			$words = array();
			$words = explode(' ', strip_tags(html_entity_decode($cat->name)));
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $cat->name, 'page_id' => $cat->term_id, 'page_type' => 'Post Category'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	
function check_post_categories_desc_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$cats_list = get_categories();

		foreach ($cats_list as $cat) {
			$words = array();
			$words = explode(' ', strip_tags(html_entity_decode($cat->description)));
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $cat->name, 'page_id' => $cat->term_id, 'page_type' => 'Category Description'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	
function check_post_categories_slug_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$cats_list = get_categories();

		foreach ($cats_list as $cat) {
			$words = array();
			$words = explode('-', strip_tags(html_entity_decode($cat->slug)));
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $cat->name, 'page_id' => $cat->term_id, 'page_type' => 'Category Slug'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_yoast_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'postmeta';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$posts_table = $wpdb->prefix . 'posts';
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;
		

		
		
		
		

		$results = $wpdb->get_results('SELECT post_id, meta_value, meta_key FROM ' . $table_name . ' WHERE meta_key="_yoast_wpseo_metadesc" OR meta_key="_aioseop_description" OR meta_key="_su_description" LIMIT 500');

		foreach($results as $desc) {
			$post_store = $desc;
			$page_results = $wpdb->get_results('SELECT * FROM ' . $posts_table . ' WHERE ID=' . $desc->post_id);
			
			if ($page_results[0]->post_title == '') continue;
			
			$desc_type = $desc->meta_key;
			$desc = html_entity_decode(strip_tags($desc->meta_value), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$desc = preg_replace('/\S+\@\S+\.\S+/', '', $desc);
			}
			if ($options_list[24]->option_value == 'true') {
				$desc = preg_replace('#\bhttps?://[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|/))#', '', $desc);
			}
			$desc = preg_replace("/[0-9]/", " ", $desc);
			$desc = preg_replace('/\s+/', ' ', $desc);
			$desc = str_replace("\xA0", ' ',$desc);
			$desc = str_replace("\xC2", '',$desc);
			$desc = str_replace("&nbsp;", ' ',$desc);
			$desc = str_replace("/",' ',$desc);
			$desc = str_replace("-",' ',$desc);
			$desc = str_replace("@",' ',$desc);
			$desc = str_replace("|",' ',$desc);
			$desc = str_replace("&",' ',$desc);
			$desc = str_replace("*",' ',$desc);
			$desc = str_replace("+",' ',$desc);
			$desc = str_replace("#",' ',$desc);
			$desc = str_replace("?",' ',$desc);
			$desc = str_replace("…",'',$desc);
			$desc = str_replace(";",' ',$desc);
			$desc = str_replace("'s",'',$desc);
			$desc = str_replace("’s",'',$desc);
			$desc = str_replace("’","'",$desc);
			$desc = str_replace("`","'",$desc);
			$desc = str_replace("s'",'s',$desc);
			$desc = str_replace(".",' ',$desc);
			$words = explode(' ', $desc);
			$words = explode(' ', $desc);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($desc_type == '_yoast_wpseo_metadesc') {
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'Yoast SEO Description'));
							} elseif ($desc_type == '_aioseop_description') {
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'All in One SEO Description')); 
							} elseif ($desc_type == '_su_description') {
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'Ultimate SEO Description')); 
							} else {
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'SEO Description')); 
							}
						}
					}
				}
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);

			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_seo_titles_free($is_running = false) {
		global $scan_delay;
		
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'postmeta';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$posts_table = $wpdb->prefix . 'posts';
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_entgress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		error_reporting(0);
		$sql_count = 6;

		
		
		
		

		$results = $wpdb->get_results('SELECT post_id, meta_value, meta_key FROM ' . $table_name . ' WHERE meta_key="_yoast_wpseo_title" OR meta_key="_aioseop_title" OR meta_key="_su_title" LIMIT 500000');

		foreach($results as $desc) {
			$post_store = $desc;
			$page_results = $wpdb->get_results('SELECT * FROM ' . $posts_table . ' WHERE ID=' . $desc->post_id);
			
			if ($page_results[0]->post_title == '') continue;
			
			$desc_type = $desc->meta_key;
			$desc = html_entity_decode(strip_tags($desc->meta_value), ENT_QUOTES, 'utf-8');
			$desc = preg_replace("/[0-9]/", " ", $desc);
			$desc = preg_replace('/\s+/', ' ', $desc);
			$desc = str_replace("\xA0", ' ',$desc);
			$desc = str_replace("\xC2", '',$desc);
			$desc = str_replace("&nbsp;", ' ',$desc);
			$desc = str_replace("/",' ',$desc);
			$desc = str_replace("-",' ',$desc);
			$desc = str_replace("@",' ',$desc);
			$desc = str_replace("|",' ',$desc);
			$desc = str_replace("&",' ',$desc);
			$desc = str_replace("*",' ',$desc);
			$desc = str_replace("+",' ',$desc);
			$desc = str_replace("#",' ',$desc);
			$desc = str_replace("?",' ',$desc);
			$desc = str_replace("…",'',$desc);
			$desc = str_replace(";",' ',$desc);
			$desc = str_replace("'s",'',$desc);
			$desc = str_replace("’s",'',$desc);
			$desc = str_replace("’","'",$desc);
			$desc = str_replace("`","'",$desc);
			$desc = str_replace("s'",'s',$desc);
			$desc = str_replace(".",' ',$desc);
			$words = explode(' ', $desc);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = str_replace('–', ' ', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($desc_type == '_yoast_wpseo_title') {
								$error_count++; 
								if ($word != "") array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'Yoast SEO Title'));
							} elseif ($desc_type == '_aioseop_title') {
								$error_count++; 
								if ($word != "") array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'All in One SEO Title')); 
							} elseif ($desc_type == '_su_title') {
								$error_count++; 
								if ($word != "") array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'Ultimate SEO Title')); 
							} else  {
								$error_count++; 
								if ($word != "") array_push($error_list, array('word' => addslashes($word), 'page_name' => $page_results[0]->post_title, 'page_id' => $post_store->post_id, 'page_type' => 'SEO Title')); 
							}
						}
					}
				}
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
					
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

function check_post_slugs_free($is_running = false) {
		global $scan_delay;
		if (!$is_running) sleep($scan_delay);
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		wpsc_set_global_vars();
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$posts_table = $wpdb->prefix . 'posts';
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		error_reporting(0);
		$sql_count = 6;

		
		$results = $wpdb->get_results('SELECT * FROM ' . $posts_table . ' WHERE post_type="post" LIMIT 500000');

		foreach($results as $desc) {
			array_shift($results);
			$desc_title = $desc->post_title;
			$desc_id = $desc->ID;
			$desc = html_entity_decode(strip_tags($desc->post_name), ENT_QUOTES, 'utf-8');
			$words = explode('-', $desc);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $desc_title, 'page_type' => 'Post Slug', 'page_id' => $desc_id));
					}
				}
			}
		}
		$error_count = sizeof($error_list);

	
	
	
	
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	
	function check_page_slugs_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		$words_table = $wpdb->prefix . 'spellcheck_words';
		$posts_table = $wpdb->prefix . 'posts';
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		
		$results = $wpdb->get_results('SELECT * FROM ' . $posts_table . ' WHERE post_type="page" LIMIT 500');

		foreach($results as $desc) {
			$desc_id = $desc->ID;
			$desc_title = $desc->post_title;
			$desc = html_entity_decode(strip_tags($desc->post_name), ENT_QUOTES, 'utf-8');
			$words = explode('-', $desc);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
								$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $desc_title, 'page_type' => 'Page Slug', 'page_id' => $desc_id));
					}
				}
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	

	function check_slider_titles_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => 'slider', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->post_title), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Slider Title'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}		
	}

	function check_slider_captions_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => 'slider', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$word_list = get_post_meta ($post->ID, 'my_slider_caption', true );
			$word_list = html_entity_decode(strip_tags($word_list), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$word_list = str_replace("<",' ',$word_list);
			$word_list = str_replace(">",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Slider Caption'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

/* Slider Plugins */

function check_it_slider_titles_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'huge_itslider_images';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = $wpdb->get_results("SELECT slider_id, name FROM $table_name");

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->name), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->name, 'page_type' => 'Huge IT Slider Title', 'page_id' => $post->slider_id));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

	function check_it_slider_captions_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'huge_itslider_images';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = $wpdb->get_results("SELECT slider_id, description, name FROM $table_name");

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->description), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$word_list = str_replace("<",' ',$word_list);
			$word_list = str_replace(">",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->name, 'page_type' => 'Huge IT Slider Caption', 'page_id' => $post->slider_id));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

/* Smart Slider 2 */

function check_smart_slider_titles_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'wp_nextend_smartslider_slides';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = $wpdb->get_results("SELECT slider, title FROM $table_name");

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->title), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->title, 'page_type' => 'Smart Slider Title', 'page_id' => $post->slider));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

	function check_smart_slider_captions_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'wp_nextend_smartslider_slides';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$words_table = $wpdb->prefix . 'spellcheck_words';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = $wpdb->get_results("SELECT slider, description, title FROM $table_name");

		foreach ($posts_list as $post) {
			$word_list = html_entity_decode(strip_tags($post->description), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$word_list = str_replace("<",' ',$word_list);
			$word_list = str_replace(">",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = $wpdb->get_results("SELECT word FROM $words_table WHERE word='" . $ignore_check . "' AND ignore_word = true");
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->title, 'page_type' => 'Smart Slider Caption', 'page_id' => $post->slider));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}


function check_media_titles_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$media_count = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => 'attachment'));

		foreach ($posts_list as $post) {
			$media_count++;
			$word_list = html_entity_decode(strip_tags($post->post_title), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$word_list = str_replace("_",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Media Title'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

	function check_media_descriptions_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$media_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => 'attachment'));

		foreach ($posts_list as $post) {
			$media_count++;
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper($post->post_title) == strtoupper($ignore_check->keyword)) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$words_list = $post->post_content;
			$words_list = preg_replace("(\[.*?\])",'',$words_list);
			
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', '', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/http|https|ftp\S+/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = str_replace("'s",'',$words_list);
			$words_list = str_replace("’s",'',$words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Media Description'));
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

	function check_media_captions_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$media_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => 'attachment'));

		foreach ($posts_list as $post) {
			$media_count++;
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper($post->post_title) == strtoupper($ignore_check->keyword)) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$words_list = $post->post_excerpt;
			$words_list = preg_replace("(\[.*?\])",'',$words_list);
			
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', '', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/http|https|ftp\S+/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = str_replace("'s",'',$words_list);
			$words_list = str_replace("’s",'',$words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Media Caption'));
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}

	function check_media_alt_free($is_running = false) {
		global $wpdb;
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$media_count = 0;
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$posts_list = get_posts(array('posts_per_page' => 500, 'post_type' => 'attachment'));

		foreach ($posts_list as $post) {
			$media_count++;
			$word_list = get_post_meta ($post->ID, '_wp_attachment_image_alt', true );
			$word_list = html_entity_decode(strip_tags($word_list), ENT_QUOTES, 'utf-8');
			$word_list = preg_replace("/[0-9]/", " ", $word_list);
			$word_list = preg_replace('/\s+/', ' ', $word_list);
			$word_list = str_replace("\xA0", ' ',$word_list);
			$word_list = str_replace("\xC2", '',$word_list);
			$word_list = str_replace("&nbsp;", ' ',$word_list);
			$word_list = str_replace("/",' ',$word_list);
			$word_list = str_replace("-",' ',$word_list);
			$word_list = str_replace("@",' ',$word_list);
			$word_list = str_replace("|",' ',$word_list);
			$word_list = str_replace("&",' ',$word_list);
			$word_list = str_replace("*",' ',$word_list);
			$word_list = str_replace("+",' ',$word_list);
			$word_list = str_replace("#",' ',$word_list);
			$word_list = str_replace("?",' ',$word_list);
			$word_list = str_replace("…",'',$word_list);
			$word_list = str_replace(";",' ',$word_list);
			$word_list = str_replace("'s",'',$word_list);
			$word_list = str_replace("’s",'',$word_list);
			$word_list = str_replace("’","'",$word_list);
			$word_list = str_replace("`","'",$word_list);
			$word_list = str_replace("s'",'s',$word_list);
			$word_list = str_replace(".",' ',$word_list);
			$word_list = str_replace("<",' ',$word_list);
			$word_list = str_replace(">",' ',$word_list);
			$words = explode(' ', $word_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '')
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'Media Alternate Text'));
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}	
	}
	
	
	function check_woocommerce_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$total_posts = 500;
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => 'product', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_content;
			$words_list = preg_replace("/(\[.*?\])/s",' ',$words_list);
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $words_list);
			}
			
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'WooCommerce Product'));
							} else {
								
							}
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}

	function check_woocommerce_coupon_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$total_posts = 500;
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => 'shop_coupon', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_excerpt;
			$words_list = preg_replace("/(\[.*?\])/s",' ',$words_list);
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", '', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'WooCommerce Coupon'));
							} else {
								
							}
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
		
			if ($is_running != true) {
				$wpdb->updafte($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}

	function check_woocommerce_excerpt_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$total_posts = 500;
		$contents = fread($file,filesize($loc));
		fclose($file);
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}

$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => 'product', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_excerpt;
			$words_list = preg_replace("/(\[.*?\])/s",' ',$words_list);
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/[^a-zA-z'’`]/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", '', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);
		
			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => addslashes($word), 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'WooCommerce Product Excerpt'));
							} else {
								
							}
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}


	function check_wpecommerce_free($is_running = false) {
		global $wpdb;
		$table_name = $wpdb->prefix . 'spellcheck_words';
		$options_table = $wpdb->prefix . 'spellcheck_options';
		$ignore_table = $wpdb->prefix . 'spellcheck_ignore';
		$dict_table = $wpdb->prefix . 'spellcheck_dictionary';
		set_time_limit(6000); 
		
		$language_setting = $wpdb->get_results('SELECT option_value from ' . $options_table . ' WHERE option_name="language_setting";');
		
		$loc = dirname(__FILE__) . "/dict/" . $language_setting[0]->option_value . ".pws";
		$file = fopen($loc, 'r');
		$contents = fread($file,filesize($loc));
		fclose($file);
		$total_posts = 500;
	
		$contents = str_replace("\r\n", "\n", $contents);
		$dict_list = explode("\n", $contents);

		foreach ($dict_list as $value) {
			$haystack[strtoupper($value)] = 1;
		}
		
$word_count = 0;
		$error_count = 0;
		$total_words = 0;
		$post_count = 0;
		$word_count = 0;
		if ($is_running != true) {
			$wpdb->update($options_table, array('option_value' => 'true'), array('option_name' => 'scan_in_progress')); 
			$start_time = time();
		wpsc_set_global_vars();
		}
		global $ignore_list;
		global $dict_list;
		global $wpsc_settings;
		$error_list = array();
		$sql_count = 6;

		$ignore_posts = $wpdb->get_results('SELECT keyword FROM ' . $ignore_table . ' WHERE type="page";');
		

		$posts_list = get_posts(array('posts_per_page' => PHP_INT_MAX, 'post_type' => 'wpsc-product', 'post_status' => array('publish', 'draft')));

		foreach ($posts_list as $post) {
			$ignore_flag = 'false';
			foreach($ignore_posts as $ignore_check) {
				if (strtoupper(trim($post->post_title)) == strtoupper(trim($ignore_check->keyword))) {
					$ignore_flag = 'true';
				}
			}
			if ($ignore_flag == 'true') { continue; }
			$post_count++;
			$words_list = $post->post_content;
			$words_list = preg_replace("/(\[.*?\])/s",' ',$words_list);
			$words_list = preg_replace("(\<.*?\>)",' ',$words_list);
			$words_list = preg_replace("/<style>\s\S*?<\/style>/",'',$words_list);
			$words_list = html_entity_decode(strip_tags($words_list), ENT_QUOTES, 'utf-8');
			if ($options_list[23]->option_value == 'true') {
				$words_list = preg_replace('/\S+\@\S+\.\S+/', ' ', $words_list);
			}
			if ($options_list[24]->option_value == 'true') {
				$words_list = preg_replace('/((http|https|ftp)\S+)/', '', $words_list);
				$words_list = preg_replace('/www\.\S+/', '', $words_list);
				$words_list = preg_replace('/([a-z1-3]+\.(com|ca))/i', ' ', $words_list);
			}
			
			$words_list = preg_replace("/[0-9]/", "", $words_list);
			$words_list = preg_replace("/'s/", " ", $words_list);
			$words_list = preg_replace("/[^a-zA-z']/", " ", $words_list);
			$words_list = preg_replace('/\s+/', ' ', $words_list);
			$words_list = str_replace("\xA0", ' ',$words_list);
			$words_list = str_replace("\xC2", '',$words_list);
			$words_list = str_replace("&nbsp;", ' ',$words_list);
			$words_list = str_replace('/',' ',$words_list);
			$words_list = str_replace("-",' ',$words_list);
			$words_list = str_replace("|",' ',$words_list);
			$words_list = str_replace("@",' ',$words_list);
			$words_list = str_replace("&",' ',$words_list);
			$words_list = str_replace("#",' ',$words_list);
			$words_list = str_replace("+",' ',$words_list);
			$words_list = str_replace("*",'',$words_list);
			$words_list = str_replace("?",' ',$words_list);
			$words_list = str_replace("…",' ',$words_list);
			$words_list = str_replace(";",' ',$words_list);
			$words_list = str_replace("’","'",$words_list);
			$words_list = str_replace("`","'",$words_list);
			$words_list = preg_replace("/[’']s[^a-z]/i", ' ', $words_list);
			$words_list = preg_replace("/[^a-z]s[’']/i", 's', $words_list);
			$words_list = str_replace("s'",'s',$words_list);
			$words_list = str_replace(".",' ',$words_list);
			$words = explode(' ', $words_list);

			foreach($words as $word) {
				$word_count++;
				$total_words++;
				$word = str_replace(' ', '', $word);
				$word = str_replace('=', '', $word);
				$word = str_replace(',', '', $word);
				$word = trim($word, "?!.,'()`”:“@$#-%\=/");
				$word = trim($word, '"');
				$word = trim($word);
				$word = preg_replace("/[0-9]/", "", $word);
				$word = preg_replace("/[^A-Za-z'’`]/", "", $word);
				if ($word == "") continue;
				$ignore_check = str_replace("'", "\'", $word);
				$ignore_word = false;
				if(isset($ignore_list)) { 
					foreach($ignore_list as $ignore) {
					if (strtoupper($word) == stripslashes(strtoupper($ignore->word))) $ignore_word = true;
				}
					}
				if ($haystack[strtoupper($word)] != 1 && !$ignore_word) {	
					$dict_word = str_replace("'", "\'", $word);
					$in_dictionary = false;
					if(isset($dict_list)) { 
					foreach($dict_list as $dict) {
						if (strtoupper($word) == strtoupper($dict->word)) $in_dictionary = true;
					}
					}

					if (!$in_dictionary) {
						
						if ((strtoupper($word) != $word || $wpsc_settings[3]->option_value == 'false') && $word != '') {
							if ($post_count <= $total_posts) {
							$word = addslashes($word);
							$error_count++; array_push($error_list, array('word' => $word, 'page_name' => $post->post_title, 'page_id' =>$post->ID, 'page_type' => 'WP eCommerce Product'));
							} else {
								
							}
						}
					}
				}	
			}
		}
		$error_count = sizeof($error_list);

	
	
	
		
		
		
		
		
		
		
		
		return sizeof($error_list);
			if ($is_running != true) {
				$wpdb->update($options_table, array('option_value' => 'false'), array('option_name' => 'scan_in_progress')); 
			$end_time = time();
			$total_time = time_elapsed($end_time - $start_time + 6);
			$wpdb->update($options_table, array('option_value' => $total_time), array('option_name' => 'last_scan_finished')); 
		}
	}
	
	function wpsc_check_scan_progress() {
		global $wpdb;
		global $wpsc_settings;
		
		$scan_in_progress = false;
		
		for($x = 66; $x <= 87; $x++) {
			if ($wpsc_settings[$x]->option_value == "true") $scan_in_progress = true;
		}
		
		return $scan_in_progress;
	}
	
	function wpsc_check_empty_scan_progress() {
		global $wpdb;
		global $wpsc_settings;
		
		$scan_in_progress = false;
		
		if ($wpsc_settings[87]->option_value != $wpsc_settings[124]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[88]->option_value != $wpsc_settings[125]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[89]->option_value != $wpsc_settings[126]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[90]->option_value != $wpsc_settings[127]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[91]->option_value != $wpsc_settings[128]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[92]->option_value != $wpsc_settings[129]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[93]->option_value != $wpsc_settings[130]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[94]->option_value != $wpsc_settings[131]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[95]->option_value != $wpsc_settings[132]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[96]->option_value != $wpsc_settings[133]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[97]->option_value != $wpsc_settings[134]->option_value) $scan_in_progress = true;
		if ($wpsc_settings[98]->option_value != $wpsc_settings[135]->option_value) $scan_in_progress = true;
		
		return $scan_in_progress;
	}
?>